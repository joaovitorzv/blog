{"pageProps":{"source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    img: \"img\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"How to recover a Cloud Formation Stack from UPDATE_ROLLBACK_FAILED state\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Recently I was working on a feature where I needed a lambda function with a custom concurrency limit.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"I thought I could just add the \", _jsx(_components.code, {\n        children: \"\\\"ReservedConcurrentExecutions\\\"\"\n      }), \" property to the Cloud Formation Template run the Amplify CLI\\ndeploy and call it a day, but... things didn‚Äôt go as expected and I got some errors:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-shell\",\n        children: \"LambdaFunction       AWS::Lambda::Function       UPDATE_FAILED        Wed Oct 02 2024 17:40:03‚Ä¶\\n\\nüõë The following resources failed to deploy:\\nResource Name: LambdaFunction (AWS::Lambda::Function)\\nEvent Type: update\\nReason: Resource handler returned message: \\\"User: arn:aws:sts::***:assumed-role/us-east-1_***/amplifyadmin is not authorized to perform: lambda:PutFunctionConcurrency on resource: arn:aws:lambda:us-east-1:***:function:***-staging because no identity-based policy allows the lambda:PutFunctionConcurrency action (Service: Lambda, Status Code: 403, Request ID: ***)\\\" (RequestToken: ***, HandlerErrorCode: AccessDenied)\\nURL: *redacted*\\n\\nResource Name: LambdaFunction (AWS::Lambda::Function)\\nEvent Type: update\\nReason: Resource handler returned message: \\\"User: arn:aws:sts::***:assumed-role/us-east-1_***/amplifyadmin is not authorized to perform: lambda:DeleteFunctionConcurrency on resource: arn:aws:lambda:us-east-1:***:function:***-staging because no identity-based policy allows the lambda:DeleteFunctionConcurrency action (Service: Lambda, Status Code: 403, Request ID: ***)\\\" (RequestToken: ***, HandlerErrorCode: AccessDenied)\\nURL: *redacted*\\n\\nüõë Resource is not in the state stackUpdateComplete\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"two errors happened, first it failed to execute the \", _jsx(_components.code, {\n        children: \"PutFunctionConcurrency\"\n      }), \" because the \", _jsx(_components.code, {\n        children: \"amplifyadmin\"\n      }), \" role used by Amplify CLI\\ndoes not have this policy by default and I was not aware of it\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"then it tried to rollback and for some reason executed \", _jsx(_components.code, {\n        children: \"DeleteFunctionConcurrency\"\n      }), \" even though it failed to update it in the first\\nplace, this got the Cloud Formation Stack in the \", _jsx(_components.code, {\n        children: \"UPDATE_ROLLBACK_FAILED\"\n      }), \" state where nothing could be done through the CLI\\nanymore, things must be fixed manually through AWS Console.\"]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"How I got it fixed\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"the \\\"manual\\\" fix in this case was simple, I went to the IAM Console searched for the amplifyadmin role and asssigned the missing\\npolicies to it\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-json\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"Version\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"2012-10-17\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"Statement\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"[\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"{\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"Sid\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"VisualEditor0\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"Effect\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Allow\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"Action\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"[\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"lambda:DeleteFunctionConcurrency\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"lambda:PutFunctionConcurrency\\\"\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"Resource\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"*\\\"\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"}\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"]\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"and then I had to re-trigger the rollback of the stack, to get this done I went to the Cloud Formation Console selected the stack\\nfailling with UPDATE_ROLLBACK_FAILED, on the ‚ÄúStack Actions‚Äù menu is listed the option ‚ÄúContinue Update Rollback‚Äù which is\\nwhat we want\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/cfn-stack-menu.png\",\n        alt: \"CloudFormation Stack Actions Menu\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"the \\\"Continue Update Rollback\\\" give us the option to skip the update of failing nested stacks (this means I could skip the failed lambda\\nstack that caused this problem) it also displays a super scary message that states if we skip the rollback of a nested stack and don't\\nfix it to be in sync with the parent stack later our whole stack might become unrecoverable.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/cfn-skip-warn.png\",\n        alt: \"CloudFormation skip stack warning\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"happily we already know what caused the issue and fixed it by assigning the policies to the CLI IAM role, we can now re-trigger the rollback without skipping the nested stack.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"at this point the stack was successfully rolled back and I could use the Amplify CLI to deploy the changes again.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"a fun thing to note is that after losing some time on that I actually ended up implementing a pessimist-locking solution for the feature\\nI was working instead of using a custom lambda concurrency, but still learned a lot.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"meta":{"id":4,"title":"Recovering a Cloud Formation Stack from UPDATE_ROLLBACK_FAILED state","description":"My experience recovering a Cloud Formation Stack from a bad state I got into","date":"10-02-2024","language":"en"}},"__N_SSG":true}